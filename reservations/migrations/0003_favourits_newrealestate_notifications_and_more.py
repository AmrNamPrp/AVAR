# Generated by Django 5.1.7 on 2025-05-02 08:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reservations', '0002_realestate_realestate_images'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Favourits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realestate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites_list', to='reservations.realestate', verbose_name='العقار')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to=settings.AUTH_USER_MODEL, verbose_name='الزبون')),
            ],
        ),
        migrations.CreateModel(
            name='NewRealEstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, choices=[('خارج سوريا', 'خارج سوريا'), ('ادلب', 'ادلب'), ('دمشق', 'دمشق'), ('حلب', 'حلب'), ('ريف دمشق', 'ريف دمشق'), ('حماه', 'حماه'), ('حمص', 'حمص'), ('درعا', 'درعا'), ('القنيطرة', 'القنيطرة'), ('السويداء', 'السويداء'), ('دير الزور', 'دير الزور'), ('القامشلي', 'القامشلي'), ('الحسكة', 'الحسكة'), ('اللاذقية', 'اللاذقية'), ('طرطوس', 'طرطوس')], max_length=30, null=True, verbose_name='المحافظة')),
                ('town', models.CharField(blank=True, max_length=30, null=True, verbose_name='المدينة او البلدة')),
                ('type', models.CharField(blank=True, choices=[('مزرعة', 'مزرعة'), ('فيلّا', 'فيلّا'), ('شقة', 'شقة')], max_length=30, null=True, verbose_name='نوع العقار')),
                ('notes', models.CharField(blank=True, max_length=500, null=True, verbose_name='ملاحظات')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('welcome_user', 'welcome_user'), ('add_realestate_user', 'add_realestate_user')], default='welcome_user', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('seen', models.BooleanField(default=False)),
                ('user_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_to', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notifications_group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('ready_to_assign_add_realestate_admin', 'ready_to_assign_add_realestate_admin'), ('got_assigned_add_realestate_admin', 'got_assigned_add_realestate_admin')], default='ready_to_assign_add_realestate_admin', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('seen', models.BooleanField(default=False)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_group', to=settings.AUTH_USER_MODEL)),
                ('user_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_to_group', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReservationPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('rejected', 'rejected'), ('accepted', 'accepted'), ('DayOff', 'DayOff')], default='pending', max_length=30)),
                ('assigned_handler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_reservations', to=settings.AUTH_USER_MODEL)),
                ('realestate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_periods', to='reservations.realestate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_periods', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notifications_reservation_group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('ready_to_assign_reservation_admin', 'ready_to_assign_reservation_admin'), ('accepting_rejecting_reservation_admin', 'accepting_rejecting_reservation_admin'), ('accepting_reservation_admin', 'accepting_reservation_admin'), ('rejecting_reservation_admin', 'rejecting_reservation_admin')], default='ready_to_assign_reservation_admin', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('seen', models.BooleanField(default=False)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_reservation', to=settings.AUTH_USER_MODEL)),
                ('user_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_reservation_to_group', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_reservation_group', to='reservations.reservationperiod')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications_reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('accepted_user', 'accepted_user'), ('rejected_user', 'rejected_user'), ('still_pending_user', 'still_pending_user')], default='still_pending_user', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('seen', models.BooleanField(default=False)),
                ('user_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_reservation_to', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_reservation', to='reservations.reservationperiod')),
            ],
        ),
        migrations.CreateModel(
            name='MyReservations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realestate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_list', to='reservations.realestate', verbose_name='العقار')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL, verbose_name='صاحب العقار')),
                ('reservationPeriod', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reservations.reservationperiod')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationRejection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rejected_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_rejections', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rejections', to='reservations.reservationperiod')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=0)),
                ('comment', models.TextField(default='', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('real_estate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review', to='reservations.realestate')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Second_Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=0)),
                ('comment', models.TextField(default='', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('real_estate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='second_review', to='reservations.realestate')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
